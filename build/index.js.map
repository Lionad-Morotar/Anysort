{"version":3,"file":"index.js","sources":["../src/utils.ts","../src/Sort.ts","../src/index.ts"],"sourcesContent":["import {\n  SortableTypeEnum,\n  SortableValue\n} from './type'\n\n/**\n * Utils\n */\n\nexport const isVoid = (x: SortableValue): boolean => x == undefined\nexport const isVoidType = (x: SortableTypeEnum): boolean => x === 'void'\nexport const getType = (x: SortableValue): SortableTypeEnum => isVoid(x) ? 'void' : Object.prototype.toString.call(x).slice(8, -1).toLowerCase()\nexport const isFn = (x: SortableValue): boolean => getType(x) === 'function'\nexport const notNull = (x: any) => !!x\n","import {\n  SortFn,\n  SortVal,\n  SortableTypeEnum,\n  SortableValue,\n  ConditionSortFn,\n  GetCompareValFn,\n} from './type'\n\nimport { isVoidType, getType } from './utils'\n\n// TODO refactor to function: x => comparableValue\n/* get comparable value from specific value */\nconst getCompareValue: ({ [key: string]: GetCompareValFn }) = {\n  string: String,\n  number: Number,\n  date: (x: Date): number => +x,\n  symbol: (x: Symbol): string => x.toString(),\n  // The priority of true is greater than false\n  boolean: (x: SortableValue): boolean => !x,\n}\n\nconst sortByType: ConditionSortFn =\n  (type: SortableTypeEnum): SortFn => (a, b): SortVal => {\n    const getValFn = getCompareValue[type]\n    if (!getValFn) throw new Error(`[ERR] Error occured when compare value ${a} with value ${b}`)\n    const va = getValFn(a), vb = getValFn(b)\n    return va === vb ? 0 : (va < vb ? -1 : 1)\n  }\n\nconst sortByDefault: SortFn =\n  (a: SortableValue, b: SortableValue) => {\n    const typeA = getType(a)\n    const typeB = getType(b)\n    const onceEmpty = isVoidType(typeA) || isVoidType(typeB)\n    if (onceEmpty) {\n      if (typeA === typeB) return 0\n      return a ? -1 : 1\n    }\n    const canSort = getCompareValue[typeA] && typeA === typeB\n    if (!canSort) {\n      console &&\n      console.warn &&\n      console.warn(`[TIP] Cannot sort ${a} with ${b}，skip by default`)\n      return undefined\n    }\n    return sortByType(typeA)(a, b)\n  }\n\ntype PluginTypeEnum = 'maping' | 'plugin'\ntype PassFn = Function\n// type PassFn = (fn: AnysortPlugin) => SortFn\ntype MapingFn = (map: PassFn) => (fn: SortFn) => (a: SortableValue, b: SortableValue) => AnysortPlugin\ntype PluginFn = (plug: PassFn) => (fn: SortFn) => (a: SortableValue, b: SortableValue) => AnysortPlugin\ntype AnysortPlugin = MapingFn | PluginFn\ntype PipeLine = {\n  _type: PluginTypeEnum\n  _value: AnysortPlugin\n}\n\nexport const pass: PassFn = fn => (a, b) => fn(a, b)\nexport const maping: MapingFn = map => fn => (a, b) => fn(map(a), map(b))\nexport const plugin: PluginFn = plug => fn => (a, b) => plug(fn(a, b))\n\nexport default class Sort {\n  compare: SortFn\n  pipeline: PipeLine[]\n  constructor () {\n    this.compare = sortByDefault\n    this.pipeline = []\n  }\n  // 给管道添加解构方法，用于解构对象并处理值\n  // @example\n  // sort.map(x => String(x.a))\n  // 从 x 中取得 a 属性并转换为字符串，再继续比较\n  map (_value: MapingFn): Sort {\n    this.pipeline.push({ _value, _type: 'maping' })\n    return this\n  }\n  // 给管道添加插件，用于调整排序动作\n  // @example\n  // sort.plugin(fn => (a, b) => -fn(a, b))\n  // 将上一个排序结果反转\n  plugin (_value: PluginFn): Sort {\n    this.pipeline.push({ _value, _type: 'plugin' })\n    return this\n  }\n  // 设定排序方法，用来处理排序的值的顺序\n  sortby (s: SortableTypeEnum): void {\n    const validMethod = s.toLowerCase()\n    this.compare = sortByType(validMethod as SortableTypeEnum)\n  }\n  // 将管道合并为函数\n  seal (): SortFn {\n    const compose:\n      (last: PassFn, current: PipeLine) => any =\n      (last, current) => {\n        const { _type, _value } = current\n        if (_type === 'maping') return maping(last(_value))\n        if (_type === 'plugin') return plugin(_value)(last)\n      }\n    return this.pipeline.reduce(compose, pass)(this.compare)\n  }\n}\n","import {\n  SortVal,\n  SortFn,\n  SortPlugin,\n  SortCMD\n} from './type'\n\nimport Sort from './Sort'\nimport { pass } from './Sort'\nimport { isVoid, isFn, notNull } from './utils'\n\n/* Default Plugins */\n\nconst plugins = {\n  // by: (sort, args) => sort.sortby(args),\n  // i: sort => sort.map(x => (x || '').toLowerCase()),\n  // asc: sort => sort.plugin(pass),\n  // dec: sort => sort.plugin(fn => (...args) => -fn(...args)),\n  // rand: sort => sort.plugin(() => () => Math.random() < .5 ? -1 : 1),\n  // is: (sort, args = '') => sort.map(x => x === args).sortby('boolean'),\n  // all: (sort, args = '') => sort.map(x => x.every ? x.every(y => String(y) === args) : x === args).sortby('boolean'),\n  // has: (sort, args) => sort.map(x => x.some(y => String(y) === args)).sortby('boolean'),\n  // not: (sort, args = '') => sort.map(x => args ? (x !== args) : !x).sortby('boolean'),\n  // len: (sort, args = null) => isVoid(args)\n  //   ? sort.map(x => x.length).sortby('number')\n  //   : sort.map(x => x.length === args).sortby('boolean'),\n\n  default: (name: string) => {\n    const pathsStore = name.split('.')\n    const getVal = (x: object) => {\n      const paths = [].concat(pathsStore)\n      let val = x, next = null\n      while (val && paths.length) {\n        next = paths.shift()\n        val = val[next]\n      }\n      return val\n    }\n    return sort => sort.map(getVal)\n  }\n}\n\n/**\n * generate SortFn from strings\n */\nfunction generateSortFnFromStr(ss: string): SortFn {\n  const sort = new Sort()\n  ss.split('-')\n    .filter(notNull)\n    .map(action => {\n      const [, name, argsWithQuote, args] = action.match(/([^(]+)(\\(([^)]*)\\))?/)\n      const plugin = argsWithQuote\n        ? plugins[name]\n        : plugins.default(name)\n      plugin(sort, args || undefined)\n    })\n  return sort.seal()\n}\n\n\n/**\n * main\n */\nfunction factory(...cmd: SortCMD[]): SortFn {\n  // flatten\n  cmd = cmd.reduce((h, c) => (h.concat(c)), [])\n  // sort by default if no arguments\n  if (cmd.length < 1) return undefined\n\n  const sortFns = cmd.map((x, i) => {\n    try {\n      return isFn(x) ? <SortFn>x : generateSortFnFromStr(<string>x)\n    } catch (error) {\n      throw new Error(`[ERR] Error on generate sort function, Index ${i + 1}th: ${x}.`)\n    }\n  })\n  const flat:\n    (fns: SortFn[]) => SortFn =\n    (fns => (a, b) => fns.reduce((sortResult: SortVal, fn: SortFn) => sortResult || fn(a, b), 0))\n\n  return flat(sortFns)\n}\n\n/**\n * install plugins for SortCMD strings\n */\nconst extendPlugins:\n  (exts: {[key: string]: SortPlugin}) => void =\n  (exts => Object.entries(exts).map(([k, v]) => plugins[k] = v))\nfactory.extends = extendPlugins\n\n/* Module Exports */\n\nmodule.exports = factory\n"],"names":[],"mappings":"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"}