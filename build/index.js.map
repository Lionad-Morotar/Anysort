{"version":3,"file":"index.js","sources":["../src/utils.ts","../src/sort.ts","../src/index.ts"],"sourcesContent":["import { SortableTypeEnum, SortableValue } from './type'\n\nexport const isDev = () => process.env.NODE_ENV === 'development'\nexport const warn = (msg: String) => isDev() && console.log(`[WARN] ${msg}`)\nexport const strObj = (obj: Object) => JSON.stringify(obj)\n\nexport const isVoid = (x: SortableValue): boolean => x == undefined\nexport const isVoidType = (x: SortableTypeEnum): boolean => x === 'void'\nexport const getType = (x: SortableValue): SortableTypeEnum => isVoid(x) ? 'void' : Object.prototype.toString.call(x).slice(8, -1).toLowerCase()\nexport const isFn = (x: SortableValue): boolean => getType(x) === 'function'\nexport const notNull = (x: any) => !!x\n\n/**\n * @example\n *    1. walk('a.b')({a:{b:3}}) returns 3\n *    2. walk(['a','b'])({a:{b:3}}) returns 3\n */\nexport const walk = (pathsStore: String | String[]) => (x: any) => {\n  const paths = pathsStore instanceof Array\n    ? [].concat(pathsStore)\n    : pathsStore.split('.')\n  let val = x; let nextPath = null\n  while (val && paths.length) {\n    nextPath = paths.shift()\n    if (!Object.prototype.hasOwnProperty.call(val, nextPath)) {\n      warn(`cant find path \"${JSON.stringify(pathsStore)}\" in ${strObj(x)}, skip by default`)\n    }\n    val = val[nextPath]\n  }\n  return val\n}\n","import { SortFn, SortPlugin, SortableValue, GetCompareValFn } from './type'\n\nimport { getType, warn } from './utils'\n\n/**\n * get sorting function based on the type of the value\n * @todo refactor x => comparableValue\n */\nconst getCompareValue: ({ [key: string]: GetCompareValFn }) = {\n  void: _ => null,\n  string: String,\n  number: Number,\n  date: (x: Date): number => +x,\n  symbol: (x: Symbol): string => x.toString(),\n  // The priority of true is greater than false\n  boolean: (x: SortableValue): boolean => !x\n}\n\nconst sortBySameType:\n  (type: string) => SortFn =\n  (type) => (a, b) => {\n    const getValFn = getCompareValue[type]\n    if (!getValFn) {\n      warn(`cant sort ${a} and ${b}，skip by default`)\n      return undefined\n    }\n    const va = getValFn(a); const vb = getValFn(b)\n    return va === vb ? 0 : (va < vb ? -1 : 1)\n  }\n\nconst sortByDiffType:\n  (typeA: string, typeB: string) => SortFn =\n  (typeA, typeB) => (a, b) => {\n    const idx = {\n      number: 1,\n      string: 2,\n      object: 3,\n      void: 4\n    }\n    if (idx[typeA] && idx[typeB]) {\n      const minus = idx[typeA] - idx[typeB]\n      return minus > 0 ? 1 : -1\n    } else {\n      warn(`cant sort ${a} and ${b}，skip by default`)\n      return 0\n    }\n  }\n\nconst sortByDefault: SortFn =\n  (a: SortableValue, b: SortableValue) => {\n    const typeA = getType(a)\n    const typeB = getType(b)\n    const isSameType = typeA === typeB\n    const isComparable = getCompareValue[typeA] && getCompareValue[typeB]\n    if (isSameType && isComparable) {\n      return sortBySameType(typeA)(a, b)\n    } else if (isComparable) {\n      return sortByDiffType(typeA, typeB)(a, b)\n    } else {\n      warn(`cant sort ${a} and ${b}，skip by default`)\n    }\n  }\n\ntype MapingPlugin = (arg: any) => any\ntype ResultPlugin = (res: any) => any\ntype PipeLine = {\n  _type: 'maping' | 'result'\n  _value: MapingPlugin\n}\n\ntype PLMaping = (map: (x: any) => any) => (fn: SortFn) => (a: any, b: any) => SortableValue\ntype PLResult = (change: (x: SortableValue) => SortableValue) => (fn: SortFn) => (a: any, b: any) => SortableValue\n\nconst maping: PLMaping = map => fn => (a, b) => fn(map(a), map(b))\nconst result: PLResult = change => fn => (a, b) => change(fn(a, b))\n\nexport default class Sort {\n  pipeline: PipeLine[]\n  constructor () {\n    this.pipeline = []\n  }\n\n  // TODO multi-arguments\n  register (plugin: SortPlugin, arg: string) {\n    plugin(this, arg)\n  }\n\n  /**\n   * its not same as Array.prototype.map in js,\n   * but more like map value a to value b,\n   * array.sort((a, b) => a - b) then becames:\n   * array.sort((a, b) => map(a) - map(b))\n   */\n  map (_value: MapingPlugin): Sort {\n    this.pipeline.push({ _value, _type: 'maping' })\n    return this\n  }\n\n  /**\n   * becareful, the result plugin should be\n   * the last one in this.pipeline\n   */\n  result (_value: ResultPlugin): Sort {\n    this.pipeline.push({ _value, _type: 'result' })\n    return this\n  }\n\n  seal (): SortFn {\n    let targetSortFn = sortByDefault\n    this.pipeline.reverse().map(current => {\n      const { _type, _value } = current\n      if (_type === 'maping') targetSortFn = maping(_value)(targetSortFn)\n      if (_type === 'result') targetSortFn = result(_value)(targetSortFn)\n    })\n    return targetSortFn\n  }\n}\n","import Sort from './sort'\nimport { isFn, walk, notNull } from './utils'\n\nimport { Anysort, AnysortConfiguration, AnysortFactory, SortVal, SortFn, Plugins, SortCMD } from './type'\n\n// global configuration\nconst config: AnysortConfiguration = {\n  patched: '__ANYSORT_PATCHED__',\n  autoWrap: true,\n  autoSort: true\n}\n\n// build-in plugins\n// TODO plugin 'remap'\nconst plugins: Plugins = {\n\n  /* Plugins that change sort argument */\n\n  i: (sort: Sort) => sort.map(x => (x || '').toLowerCase()),\n  is: (sort: Sort, arg: string) => sort.map(x => x === arg),\n  nth: (sort: Sort, arg: string) => sort.map(x => x[+arg]),\n  all: (sort: Sort, arg: string) =>\n    sort.map(x => x.every ? x.every(y => String(y) === arg) : x === arg),\n  has: (sort: Sort, arg: string) =>\n    sort.map(x => x instanceof Array\n      ? x.some(y => String(y) === arg)\n      : x.includes(arg)),\n  not: (sort: Sort, arg: string) => sort.map(x => arg ? (x !== arg) : !x),\n  len: (sort: Sort, arg: string) =>\n    arg.length\n      ? sort.map(x => x.length === +arg)\n      : sort.map(x => x.length),\n  get: (sort: Sort, arg: string) => sort.map(walk(arg)),\n\n  /* Plugins that change sort order directly */\n\n  reverse: (sort: Sort) => sort.result(res => -res),\n  rand: (sort: Sort) => sort.result(_ => Math.random() < 0.5 ? -1 : 1)\n}\n\n/**\n * generate SortFn from string command\n * @exam 'date-reverse()' would be a valid command,\n *        then would be split into 'date' and 'reverse()' plugin\n */\nconst genSortFnFromStrGen = (delim: string = '-') => (ss: string): SortFn => {\n  const sort = new Sort()\n  ss.split(delim)\n    .filter(notNull)\n    .map(action => {\n      // if match with parens, it's a plugin, such as is(a)),\n      // else it's a object path such as 'a.b'\n      const [, name, callable, fnArg] = action.match(/([^(]+)(\\(([^)]*)\\))?/)\n      callable\n        ? sort.register(plugins[name], fnArg)\n        : sort.register(plugins.get, name)\n    })\n  return sort.seal()\n}\nconst genSortFnFromStr = genSortFnFromStrGen()\n\nconst wrapperProxy = (arr: any[]): any[] => {\n  if (arr[config.patched]) {\n    throw new Error('[ANYSORT] patched arr cant be wrapped again')\n  }\n  return new Proxy(arr, {\n    get (target, prop) {\n      if (prop === config.patched) {\n        return true\n      }\n      if (prop === 'apply') {\n        return (...args: SortCMD[]) => factory(target, ...args)\n      }\n      if (Object.prototype.hasOwnProperty.call(plugins, prop)) {\n        // TODO check typeof arg\n        return (arg: string = '') => {\n          const cmd = `${String(prop)}(${String(arg)})`\n          return factory(target, cmd)\n        }\n      }\n      return target[prop]\n    }\n  })\n}\n\n/**\n * main\n * @exam 4 ways to use anysort\n *       1. anysort(arr: any[], args: SortCMD[]) => any[];\n *       2. anysort(arr: any[], ...args: SortCMD[]) => any[];\n *       3. anysort(...args: SortCMD[]) => SortFn;\n *       4. anysort(arr: any[]) => any[]\n * @todo fix types\n */\n// @ts-ignore\nconst factory: AnysortFactory = (arr: any[], ...cmds: SortCMD[]) => {\n  const isFirstArr = arr instanceof Array\n  const filteredCMDs = (isFirstArr ? cmds : [].concat(arr).concat(cmds))\n    .reduce((h, c) => (h.concat(c)), [])\n    .filter(Boolean)\n\n  const isEmptyCMDs = filteredCMDs.length === 0\n  if (isEmptyCMDs && !config.autoSort) {\n    if (config.autoWrap) {\n      return wrapperProxy(arr)\n    } else {\n      return arr\n    }\n  }\n\n  const sortFns = isEmptyCMDs\n    ? [new Sort().seal()]\n    : filteredCMDs.map((x: SortCMD, i: number) => {\n      try {\n        return isFn(x) ? <SortFn>x : genSortFnFromStr(<string>x)\n      } catch (err) {\n        throw new Error(`[ERR] Error on generate sort function, Index ${i + 1}th: ${x}, error: ${err}`)\n      }\n    })\n\n  const flat:\n    (fns: SortFn[]) => SortFn =\n    fns => (a, b) => fns.reduce((sortResult: SortVal, fn: SortFn) => sortResult || fn(a, b), 0)\n  const flattenCMDs = flat(sortFns)\n\n  let result = isFirstArr\n    ? arr.sort(flattenCMDs)\n    : flattenCMDs\n\n  if (config.autoWrap) {\n    if (isFirstArr) {\n      if (!result[config.patched]) {\n        result = wrapperProxy(result as any[])\n      }\n    }\n  }\n\n  return result\n}\n\n// install plugins for Sort\nconst extendPlugs = (exts: Plugins) =>\n  Object.entries(exts).map(([k, v]) => plugins[k] = v)\n\n/**\n * Module Exports\n */\n;(factory as Anysort).extends = extendPlugs\n;(factory as Anysort).genSortFnFromStrGen = genSortFnFromStrGen\n;(factory as Anysort).wrap = (arr: any[]) => wrapperProxy(arr)\n;(factory as Anysort).config = config\nmodule.exports = factory\n"],"names":["__spreadArray"],"mappings":"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"}