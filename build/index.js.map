{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["const isVoid = x => x == undefined\nconst getType = x => isVoid(x) ? 'void' : Object.prototype.toString.call(x).slice(8, -1).toLowerCase()\nconst isFn = x => getType(x) === 'function'\n\nconst constructor = {\n  date: x => +x,\n  string: String,\n  number: Number,\n  // The priority of true is greater than false\n  boolean: x => !x,\n  symbol: x => x.toString()\n}\n\n// 比较值的大小的方法\nconst by = {\n  default: (a, b) => {\n    const typeA = getType(a)\n    const typeB = getType(b)\n    if (typeA === 'void' || typeB === 'void') {\n      return by.void(a, b, typeA, typeB)\n    } else {\n      const canSort = constructor[typeA] && typeA === typeB\n      !canSort && console.warn(`[TIP] 不能排序对 ${a} 和 ${b} 排序，忽略此次比较。你可以传入自定义排序函数对对象进行排序。`)\n      return canSort\n        ? by.type(typeA)(a, b)\n        : undefined\n    }\n  },\n  type: type => (a, b) => {\n    const Type = isFn(type) ? type : constructor[type]\n    if (!Type) throw new Error(`Error occured when compare value ${a} with value ${b}`)\n    const va = Type(a), vb = Type(b)\n    return va === vb ? 0 : (va < vb ? -1 : 1)\n  },\n  void: (a, b, ta, tb) => {\n    if (ta === tb) return 0\n    if (a) return -1\n    if (b) return 1\n  }\n}\n\n// 排序实例，用来维护排序管道和排序方法\nfunction Sort() {\n  this.compare = null\n  this.pipeline = []\n}\n// 给管道添加解构方法，用于解构对象并处理值\n// @example\n// sort.map(x => String(x.a))\n// 从 x 中取得 a 属性并转换为字符串，再继续比较\nSort.prototype.map = function (_value) {\n  this.pipeline.push({ _value, _type: 'map' })\n  return this\n}\n// 给管道添加插件，用于调整排序动作\n// @example\n// sort.plugin(fn => (a, b) => -fn(a, b))\n// 将上一个排序结果反转\nSort.prototype.plugin = function (_value) {\n  this.pipeline.push({ _value, _type: 'plugin' })\n  return this\n}\n// 设定排序方法，用来处理排序的值的顺序\nSort.prototype.sortby = function (fn) {\n  this.compare = isFn(fn) ? fn : by.type(fn.toLowerCase())\n}\n// 空过程函数（接受一个函数，返回一个接受参数并返回该函数处理参数的结果的函数）\nconst pass = sortFn => (...args) => sortFn(...args)\n// 将管道合并为函数\nSort.prototype.seal = function () {\n  this.compare = this.compare || by.default\n\n  const plugin = plug => sortFn => (...args) => plug(sortFn(...args))\n  const mapping = map => sortFn => (...args) => sortFn(...args.map(x => map(x)))\n\n  return this.pipeline.reduce((lastSortFn, current) => {\n    const { _type, _value } = current\n    if (_type === 'map') return mapping(lastSortFn(_value))\n    if (_type === 'plugin') return plugin(_value)(lastSortFn)\n  }, pass)(this.compare)\n}\n\n// 初始插件\nconst plugins = {\n  by: (sort, args) => sort.sortby(args),\n  i: sort => sort.map(x => (x || '').toLowerCase()),\n  asc: sort => sort.plugin(pass),\n  dec: sort => sort.plugin(fn => (...args) => -fn(...args)),\n  rand: sort => sort.plugin(() => () => Math.random() < .5 ? -1 : 1),\n  is: (sort, args = '') => sort.map(x => x === args).sortby('boolean'),\n  all: (sort, args = '') => sort.map(x => x.every ? x.every(y => String(y) === args) : x === args).sortby('boolean'),\n  has: (sort, args) => sort.map(x => x.some(y => String(y) === args)).sortby('boolean'),\n  not: (sort, args = '') => sort.map(x => args ? (x !== args) : !x).sortby('boolean'),\n  len: (sort, args = null) => isVoid(args)\n    ? sort.map(x => x.length).sortby('number')\n    : sort.map(x => x.length === args).sortby('boolean'),\n\n  // 默认使用解构插件，处理对象的属性如 'a.b.c' 的值\n  default: name => {\n    const pathsStore = name.split('.')\n    const getVal = x => {\n      const paths = [...pathsStore]\n      let val = x\n      while (val && paths.length) {\n        next = paths.shift()\n        val = val[next]\n      }\n      return val\n    }\n    return sort => sort.map(getVal)\n  }\n}\n\n// 从字符串指令中得到排序函数\nfunction generate(s) {\n  const sort = new Sort()\n  let [...actions] = s.split('-')\n  actions = actions.filter(x => x)\n    .map(action => {\n      const [all, name, argsWithQuote, args] = action.match(/([^(]+)(\\(([^)]*)\\))?/)\n      const plugin = argsWithQuote\n        ? plugins[name]\n        : plugins.default(name)\n      plugin(sort, args || undefined)\n    })\n  return sort.seal()\n}\n\n/**\n * 初始化函数，根据传入的指令（或函数），获得对应的排序方法\n * @returns {function} sortFn 排序方法，可用于 Array.prototype.sort 参数\n * @todo 根据参数可选是否覆盖 Array.prototype.sort\n */\nfunction factory(...cmd) {\n  cmd = cmd.reduce((h, c) => (h.concat(c)), [])\n  if (cmd.length < 1) return undefined\n\n  const sortFns = cmd.map((x, i) => {\n    try {\n      return isFn(x) ? x : generate(x)\n    } catch (error) {\n      throw new Error(`Error on generate sort function, Index ${i + 1}th: ${x}.`)\n    }\n  })\n\n  const flat = fns => (a, b) => fns.reduce((sortResult, fn) => sortResult || fn(a, b), 0)\n  return flat(sortFns)\n}\n\n/**\n * 自定义插件\n * @todo 自定义排序逻辑\n */\nfactory.extends = function extendPlugin(exts = {}) {\n  Object.entries(exts).map(([k, v]) => {\n    plugins[k] = v\n  })\n}\n\nmodule.exports = factory\n"],"names":[],"mappings":"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"}