{"version":3,"file":"index.js","sources":["../src/utils.ts","../src/Sort.ts","../src/index.ts"],"sourcesContent":["import {\n  SortableTypeEnum,\n  SortableValue\n} from './type'\n\nconst __DEBUG = false\n\nexport const isDev = () => process.env.NODE_ENV === 'development'\nexport const warn = (msg: String) => __DEBUG && console.log(`[WARN] ${msg}`)\nexport const strObj = (obj: Object) => JSON.stringify(obj)\n\nexport const isVoid = (x: SortableValue): boolean => x == undefined\nexport const isVoidType = (x: SortableTypeEnum): boolean => x === 'void'\nexport const getType = (x: SortableValue): SortableTypeEnum => isVoid(x) ? 'void' : Object.prototype.toString.call(x).slice(8, -1).toLowerCase()\nexport const isFn = (x: SortableValue): boolean => getType(x) === 'function'\nexport const notNull = (x: any) => !!x\n\nexport const getValueFromPath = (pathsStore: String[]) => (x: any) => {\n  const paths = [].concat(pathsStore)\n  let val = x, nextPath = null\n  while (val && paths.length) {\n    nextPath = paths.shift()\n    if (!val.hasOwnProperty(nextPath)) {\n      warn(`cant find path \"${pathsStore.join('.')}\" in ${strObj(x)}, skip by default`)\n    }\n    val = val[nextPath]\n  }\n  return val\n}\n","import {\n  SortFn,\n  SortableValue,\n  GetCompareValFn,\n} from './type'\n\nimport { isVoidType, getType, warn } from './utils'\n\n/**\n * get sorting function based on the type of the value\n * @todo refactor x => comparableValue\n */\nconst getCompareValue: ({ [key: string]: GetCompareValFn }) = {\n  string: String,\n  number: Number,\n  date: (x: Date): number => +x,\n  symbol: (x: Symbol): string => x.toString(),\n  // The priority of true is greater than false\n  boolean: (x: SortableValue): boolean => !x,\n}\n\nconst sortByType:\n  (type: string) => SortFn =\n  (type) => (a, b) => {\n    const getValFn = getCompareValue[type]\n    if (!getValFn) {\n      warn(`cant sort ${a} and ${b}，skip by default`)\n      return undefined\n    }\n    const va = getValFn(a), vb = getValFn(b)\n    return va === vb ? 0 : (va < vb ? -1 : 1)\n  }\n\nconst sortByDefault: SortFn =\n  (a: SortableValue, b: SortableValue) => {\n    const typeA = getType(a)\n    const typeB = getType(b)\n    // ignore null or undefined\n    if (isVoidType(typeA) || isVoidType(typeB)) {\n      if (typeA === typeB) return 0\n      return a ? -1 : 1\n    }\n    const canSort = getCompareValue[typeA] && typeA === typeB\n    if (!canSort) {\n      warn(`cant sort ${a} and ${b}，skip by default`)\n      return undefined\n    }\n    return sortByType(typeA)(a, b)\n  }\n\ntype MapingPlugin = (arg: any) => any\ntype ResultPlugin = (res: any) => any\ntype PipeLine = {\n  _type: 'maping' | 'result'\n  _value: MapingPlugin\n}\n\nexport const maping = map => fn => (a, b) => fn(map(a), map(b))\nexport const result = change => fn => (a, b) => change(fn(a, b))\n\nexport default class Sort {\n  pipeline: PipeLine[]\n  constructor () {\n    this.pipeline = []\n  }\n  map (_value: MapingPlugin): Sort {\n    this.pipeline.push({ _value, _type: 'maping' })\n    return this\n  }\n  result (_value: ResultPlugin): Sort {\n    this.pipeline.push({ _value, _type: 'result' })\n    return this\n  }\n  seal (): SortFn {\n    let targetSortFn = sortByDefault\n    this.pipeline.reverse().map(current => {\n      const { _type, _value } = current\n      if (_type === 'maping') targetSortFn = maping(_value)(targetSortFn)\n      if (_type === 'result') targetSortFn = result(_value)(targetSortFn)\n    })\n    return targetSortFn\n  }\n}\n","import {\n  SortableValue,\n  SortVal,\n  SortFn,\n  SortPlugin,\n  SortCMD\n} from './type'\n\nimport Sort from './Sort'\nimport { isVoid, isFn, getValueFromPath, notNull } from './utils'\n\n/**\n * default plugins\n */\nconst plugins = {\n  i: sort => sort.map(x => (x || '').toLowerCase()),\n  dec: sort => sort.result(res => -res),\n  reverse: sort => sort.result(res => -res),\n  rand: sort => sort.result(_ => Math.random() < .5 ? -1 : 1),\n  is: (sort, arg) => sort.map(x => x === arg),\n  all: (sort, arg) => sort.map(x => x.every\n    ? x.every(y => String(y) === arg)\n    : x === arg),\n  has: (sort, arg) => sort.map(x => x instanceof Array\n    ? x.some(y => String(y) === arg)\n    : x.includes(arg)),\n  not: (sort, arg) => sort.map(x => arg\n    ? (x !== arg)\n    : !x),\n  len: (sort, arg) => !arg.length\n    ? sort.map(x => x.length)\n    : sort.map(x => x.length === +arg),\n  getValue: (paths: string) => sort => sort.map(getValueFromPath(paths.split('.')))\n}\n\n/**\n * generate SortFn from string\n */\nfunction generateSortFnFromStr(ss: string): SortFn {\n  const sort = new Sort()\n  ss.split('-')\n    .filter(notNull)\n    .map(action => {\n      // TODO args\n      const [, fnName, argsWithParen, arg] = action.match(/([^(]+)(\\(([^)]*)\\))?/)\n      const plugin = argsWithParen\n        ? plugins[fnName]\n        : plugins.getValue(fnName)\n      // the default value of arg is empty string because the value cames from regex matching\n      plugin(sort, arg)\n    })\n  return sort.seal()\n}\n\n/**\n * main\n * @todo anysort(Array)\n */\nfunction factory(...cmd: SortCMD[]): SortFn {\n  // flatten\n  // TODO perf count\n  cmd = cmd.reduce((h, c) => (h.concat(c)), [])\n  // sort by default if no arguments\n  if (cmd.length === 0) return undefined\n\n  const sortFns = cmd.map((x, i) => {\n    try {\n      return isFn(x) ? <SortFn>x : generateSortFnFromStr(<string>x)\n    } catch (err) {\n      throw new Error(`[ERR] Error on generate sort function, Index ${i + 1}th: ${x}, error: ${err}`)\n    }\n  })\n\n  const flat:\n    (fns: SortFn[]) => SortFn =\n    (fns => (a, b) => fns.reduce((sortResult: SortVal, fn: SortFn) => sortResult || fn(a, b), 0))\n\n  return flat(sortFns)\n}\n\n/**\n * install plugins for SortCMD strings\n */\nconst extendPlugins:\n  (exts: {[key: string]: SortPlugin}) => void =\n  (exts => Object.entries(exts).map(([k, v]) => plugins[k] = v))\nfactory.extends = extendPlugins\n\n/* Module Exports */\n\nmodule.exports = factory\n"],"names":[],"mappings":"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"}